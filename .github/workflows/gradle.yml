# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CI with Gradle

on:
  push:
  pull_request:
    
jobs:
  Compile:
    runs-on: ubuntu-latest

    steps:
      # set environment
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Compile with Gradle
        run:  ./gradlew compileJava
        
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: /install.sh
        
  Test:
    needs: [ Compile ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: /install.sh

      - name: Test with Gradle
        run: ./gradlew test
      - name: Upload Test Report
        uses: actions/upload-artifact@v2
        with:
          name: testReport
          path: ./build/reports/tests/test
          
  Assemble:
    needs: [ Test ]
    runs-on: ubuntu-latest

    outputs:
      jar_filename: ${{ steps.get_filename.outputs.filename }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Cache dependencies
        uses: actions/cache@v2
        id: cache
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: /install.sh

      - name: Assemble with Gradle
        run: ./gradlew assemble

      - name: Set environment of jar_filename
        run: echo "jar_filename=$(ls ./build/libs/)" >> $GITHUB_ENV        
      - id: get_filename
        run: echo "::set-output name=filename::${{ env.jar_filename }}"       
      - name: Upload Jar File
        uses: actions/upload-artifact@v2
        with:
          name: buildJar
          path: ./build/libs/          
          
  Release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    needs: [ Assemble ]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Jar File
        uses: actions/download-artifact@v2
        with:
          name: buildJar

      - name: Release Jar File
        uses: softprops/action-gh-release@v1
        with:
          files: ${{needs.Assemble.outputs.jar_filename}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
